name: Run rclone

on:
  workflow_dispatch:
    inputs:
      rclone_config_base64:
        description: "Rclone config content in base64"
        required: true
      rclone_command:
        description: "Rclone command to run"
        required: true

jobs:
  rclone:
    runs-on: ubuntu-latest

    steps:
      - name: Setup rclone
        run: |
          sudo apt-get update
          sudo apt-get install -y rclone

      - name: Decode and configure rclone
        env:
          RCLONE_CONFIG_BASE64: ${{ github.event.inputs.rclone_config_base64 }}
        run: |
          mkdir -p ~/.config/rclone
          # Using a file to avoid logging sensitive data
          echo "${RCLONE_CONFIG_BASE64}" > rclone_config_base64.txt
          base64 --decode rclone_config_base64.txt > ~/.config/rclone/rclone.conf
          rm -f rclone_config_base64.txt

      - name: Process rclone command
        id: process_command
        run: |
          command="${{ github.event.inputs.rclone_command }}"
          if [[ $command != rclone* ]]; then
            command="rclone $command"
          fi
          echo "RCLONE_COMMAND=${command}" >> $GITHUB_ENV
        shell: bash

      - name: Run rclone command
        run: |
          ${{ env.RCLONE_COMMAND }}
        shell: bash

      - name: Clean up rclone config
        run: |
          rm -f ~/.config/rclone/rclone.conf
        shell: bash

      - name: Delete logs of Decode and configure rclone step
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          run_id=${{ github.run_id }}
          job_id=${{ github.job }}
          step_name="Decode and configure rclone"
          logs_url="https://api.github.com/repos/${{ github.repository }}/actions/runs/${run_id}/jobs"
          job_logs=$(curl -s -H "Authorization: token $GITHUB_TOKEN" $logs_url)
          step_logs_url=$(echo $job_logs | jq -r ".jobs[] | select(.name == \"$job_id\") | .steps[] | select(.name == \"$step_name\") | .logs_url")
          curl -X DELETE -H "Authorization: token $GITHUB_TOKEN" $step_logs_url
        shell: bash
